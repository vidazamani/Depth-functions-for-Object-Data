library(ICtest)
library(abind)
library(CovTools)
library(ggplot2)
library(dplyr)
library(purrr)
library(parallel)
library(dplyr)
library(viridis)
library(ggsci)
library(Rcpp) ## you need to have the latest version of Rcpp
library(MetricDepth)

# generate data function 

gener_corr_data <- function(p,n,eps,mu){
  
  # Non-outlying sample size
  n0 <- floor((1 - eps)*n)
  
  # Outlying sample size
  n1 <- n - n0
  
  many_S_non_outliers <- replicate(n0, {
    
    U <- rorth(p)
    D <- diag(exp(rnorm(p)))
    S <- U%*%D%*%t(U)
    
    diagS <- diag(S)
    diag(1/sqrt(diagS))%*%S%*%diag(1/sqrt(diagS))
    
  })
  
  
  many_S_outliers <- replicate(n1, {
    
    U <- rorth(p)
    D <- diag(exp(c(rnorm(1, mu), rnorm(p - 1, -mu))))
    S <- U%*%D%*%t(U)
    
    diagS <- diag(S)
    diag(1/sqrt(diagS))%*%S%*%diag(1/sqrt(diagS))
    
    
  })
  
  many_S <- abind(many_S_non_outliers, many_S_outliers)
  return(many_S)
}




simulation_with_corr <- function(p,n,eps,mu){
  
  
  # generate data
  many_S <- gener_corr_data(p,n,eps,mu)
  
  # Compute the distance matrix between the corr matrices
  
  
  D <- CovDist(many_S, method = "AIRM")
  
  
  ############## Each depth running time ###################
  
  start_time = Sys.time()
  DMHD <- MHD_cpp(D)
  end_time = Sys.time()
  MHDt <- difftime(end_time, start_time, units = 'secs')
  
  start_time = Sys.time()
  DMSD <- MSD_cpp(D)
  end_time = Sys.time()
  MSDt <- difftime(end_time, start_time, units = 'secs')
  
  
  start_time = Sys.time()
  DMLD <- MLD_cpp(D)
  end_time = Sys.time()
  MLDt <- difftime(end_time, start_time, units = 'secs')
  
  
  start_time = Sys.time()
  MOD2D <- MOD2_cpp(D)
  end_time = Sys.time()
  MOD2t <- difftime(end_time, start_time, units = 'secs')
  
  
  start_time = Sys.time()
  MOD3D <- MOD3_cpp(D)
  end_time = Sys.time()
  MOD3t <- difftime(end_time, start_time, units = 'secs')
  
  ###########################################
  
  ##### Computing Error #####
  
  MHDD = order(DMHD)[n] ; MSDD = order(DMSD)[n] 
  MLDD = order(DMLD)[n] ; MODD2 = order(MOD2D)[n]
  MODD3 = order(MOD3D)[n]
  
  tudeepest = many_S[,,MHDD]
  spdeepest = many_S[,,MSDD]
  lensdeepest = many_S[,,MLDD]
  oja2deepest = many_S[,,MODD2]
  oja3deepest = many_S[,,MODD3]
  
  
  Diff <- array(0, dim = c(p, p, 2))
  
  
  Diff[, , 1] <- tudeepest
  Diff[, , 2] <- diag(p)
  
  tudiff1 = CovDist(Diff, method = "AIRM")[1,2]
  
  
  
  Diff[, , 1] <- spdeepest
  spdiff1 = CovDist(Diff, method = "AIRM")[1,2]
  
  
  Diff[, , 1] <- lensdeepest
  lendiff1 = CovDist(Diff, method = "AIRM")[1,2]
  
  
  Diff[, , 1] <- oja2deepest
  oja2diff1 = CovDist(Diff, method = "AIRM")[1,2]
  
  
  Diff[, , 1] <- oja3deepest
  oja3diff1 = CovDist(Diff, method = "AIRM")[1,2]
  
  
  depths_error <- c(tudiff1, spdiff1, lendiff1, oja2diff1, oja3diff1)
  time_consumption <- c(MHDt,MSDt,MLDt,MOD2t,MOD3t)
  
  result <- data.frame(depths_error,time_consumption)
  return(result)
  
}

starttime <- Sys.time()


######### Parameters 

# number of random corr matrices
n <- c(10,20,30,40,50,60)

# Matrix Dimension
p = c(3, 5, 10)

# Proportion of outliers (To check the robustness of our methods)
eps = c(0.05, 0.1)


# How outlying the outliers are
mu = 3



par_grid <- expand.grid(sample_size = n,
                        matrix_dimension = p,
                        outlier_rate = eps, 
                        mean = mu)


par_n <- nrow(par_grid)



iter = 200
temp <- list()
output <- matrix(0)
a <- list()
b <- data.frame()
b_all <- data.frame()



cl <- makeCluster(8)
clusterExport(cl, ls(), envir = environment())
clusterExport(cl, c("rorth","abind", "CovDist",'MHD_cpp',
                    'MOD3_cpp','MOD2_cpp','MSD_cpp','MLD_cpp'), envir = environment())


clusterEvalQ(cl, set.seed(2222))
set.seed(1111)
seed_vec <- sample(1:100000, iter)


for (j in 1:iter) {
  
  set.seed(seed_vec[j])
  
  temp <- parSapply(cl, 1:par_n, function(i) simulation_with_corr(par_grid$matrix_dimension[i],
                                                                  par_grid$sample_size[i],
                                                                  par_grid$outlier_rate[i],
                                                                  par_grid$mean[i]))
  
  output <- matrix(unlist(temp), ncol = 5, byrow = TRUE)
  
  a = lapply(1:5, function(i) data.frame(par_grid, 
                                         errorD = output[seq(1,2*length(n)*length(p)*length(eps),2),i],
                                         howlong = output[seq(2,2*length(n)*length(p)*length(eps),2),i],
                                         method = i))
  
  b = list_rbind(a)
  b_all <- rbind(b_all,b)
  
}





b_all$method <- factor(b_all$method, 1:5, c("Metric Half-space depth",
                                            "Metric Spatial depth",
                                            "Metric Lens depth",
                                            "Metric Oja depth 2D",
                                            "Metric Oja depth 3D"))

bagg = b_all %>% 
  group_by(method,mean,outlier_rate,matrix_dimension,sample_size) %>% 
  summarise(avg_error = mean(errorD), avg_time = mean(howlong))

dput(bagg,file = "C:\\Users\\vizama\\Documents\\1st paper\\Sim on corr cpp results\\Data\\corr_sim_data.txt")



stopCluster(cl)


endtime <- Sys.time()
duration <-  difftime(endtime, starttime, units = 'days')



############# Visualization ###############

corr_sim_data <- dget("C:\\Users\\vizama\\Documents\\1st paper\\Sim on corr cpp results\\Data\\corr_sim_data.txt")

### 2 * 3 panel

###################### MOD3/MOD3 plot ########################

specific_method <- "Metric Oja depth 3D"
specific_method <- "Metric Oja depth 2D"
specific_method <- "Metric Spatial depth"


reference_values <- corr_sim_data %>%
  filter(method == specific_method) %>%
  pull(avg_error)

df <- corr_sim_data %>% group_by(method) %>% 
  mutate(Normalized = avg_error / reference_values)

# head(df[df$method == specific_method,c(1,6,8)])



pdf(file = 
      "C:/Users/vizama/Documents/1st paper/Sim on corr cpp results/Error/corr error relative to MSD cpp.pdf",  
    width = 11, # The width of the plot in inches
    height = 7) # The height of the plot in inches

# New facet label names for matrix dimension variable
mtd.labs <- c("p = 3", "p = 5", "p = 10")
names(mtd.labs) <- c(3, 5, 10)

# New facet label names for outlier rate variable
otl.labs <- c("Outlier rate = 5%", "Outlier rate = 10%")
names(otl.labs) <- c("0.05", "0.1")

levels(df$method) <- c("MHD", "MSD", "MLD", "MOD2", "MOD3")

ggplot()+ 
  facet_grid(outlier_rate~matrix_dimension,
             labeller = labeller(matrix_dimension = mtd.labs,
                                 outlier_rate = otl.labs))+
  geom_line(data = df, aes(x = sample_size,
                           y = Normalized,
                           colour = method,
                           linetype = method),
            linewidth = 1)+
  scale_linetype_manual(values = c("dashed", "solid", "dotted", "dotdash", "solid")) +
  scale_color_manual(values = c("blue", "green", "purple", "red", "black")) +
  scale_x_continuous(name="Sample size")+
  scale_y_log10(name = 'Estimation error')+
  theme_bw()+ 
  theme(plot.title = element_text(size = 12), 
        plot.subtitle = element_text(size = 9),
        legend.position="bottom",
        legend.title = element_blank(),
        legend.text=element_text(size=14),
        strip.text.x = element_text(size = 16, 
                                    colour = "black",
                                    angle = 90),
        strip.text.y = element_text(size = 16, 
                                    colour = "black",
                                    angle = 90),
        axis.title.x = element_text(size = 16),  # X-axis label size
        axis.title.y = element_text(size = 16))



dev.off()




################## Without division #######################

pdf(file = 
      "C:/Users/vizama/Documents/1st paper/Sim on corr cpp results/Error/corr error withoutdiv cpp.pdf",  
    width = 10, # The width of the plot in inches
    height = 6) # The height of the plot in inches


# New facet label names for matrix dimension variable
mtd.labs <- c("p = 3", "p = 5", "p = 10")
names(mtd.labs) <- c(3, 5, 10)

# New facet label names for outlier rate variable
otl.labs <- c("Outlier rate = 5%", "Outlier rate = 10%")
names(otl.labs) <- c("0.05", "0.1")

levels(corr_sim_data$method) <- c("MHD", "MSD", "MLD", "MOD2", "MOD3")

ggplot()+ 
  facet_grid(outlier_rate~matrix_dimension,
             labeller = labeller(matrix_dimension = mtd.labs,
                                 outlier_rate = otl.labs))+
  geom_line(data = corr_sim_data, aes(x = sample_size,
                                      y = avg_error,
                                      colour = method,
                                      linetype = method),
            linewidth = 0.8)+
  scale_linetype_manual(values = c("dashed", "solid", "dotted", "dotdash", "dashed")) +
  scale_color_manual(values = c("blue", "green", "purple", "red", "black")) +
  scale_x_continuous(name="Sample size")+
  scale_y_log10(name = 'Estimation error')+
  theme_bw()+ 
  theme(plot.title = element_text(size = 12), 
        plot.subtitle = element_text(size = 9),
        legend.position="bottom",
        legend.title = element_blank(),
        legend.text=element_text(size=12),
        strip.text.x = element_text(size = 16, 
                                    colour = "black",
                                    angle = 90),
        strip.text.y = element_text(size = 16, 
                                    colour = "black",
                                    angle = 90),
        axis.title.x = element_text(size = 16),  # X-axis label size
        axis.title.y = element_text(size = 16)) 
  


dev.off()




#### plot with title and subtitle 
# plot+labs(title = "Performance of each Metric Depth Function", 
#        subtitle = "when matrix dimnesion (P) and outlier rate increase")



#### 3 * 2 panel


# pdf(file = "C:/1stPaper/Codes/Results_first_simulation/Pics/Avg_Error/blind32.pdf",  
#     width = 8, # The width of the plot in inches
#     height = 5) # The height of the plot in inches
# 
# 
# # New facet label names for matrix dimension variable
# mtd.labs <- c("p = 3", "p = 5", "p = 10")
# names(mtd.labs) <- c(3, 5, 10)
# 
# # New facet label names for outlier rate variable
# otl.labs <- c("Outlier rate = 5%", "Outlier rate = 30%")
# names(otl.labs) <- c("0.05", "0.3")
# 
# 
# 
# ggplot(bagg,aes(x = sample_size, y = avg_error, col = method))+ 
#   facet_grid(matrix_dimension~outlier_rate,
#              labeller = labeller(matrix_dimension = mtd.labs,
#                                  outlier_rate = otl.labs))+
#   geom_line(linewidth = 0.7)+
#   scale_x_continuous(name="Sample size")+
#   scale_y_log10(name = 'Estimation error')+
#   theme_bw()+ 
#   theme(plot.title = element_text(size = 12), 
#         plot.subtitle = element_text(size = 9),
#         legend.position="bottom",
#         legend.title = element_blank())
# 
# 
# 
# dev.off()



##### Running time plot

### 2 * 3 panel -- Logarithmic scale 

pdf(file = 
      "C:/Users/vizama/Documents/1st paper/Sim on corr cpp results/Time/corr time cpp.pdf",  
    width = 10, # The width of the plot in inches
    height = 6) # The height of the plot in inches


# New facet label names for matrix dimension variable
mtd.labs <- c("p = 3", "p = 5", "p = 10")
names(mtd.labs) <- c(3, 5, 10)

# New facet label names for outlier rate variable
otl.labs <- c("Outlier rate = 5%", "Outlier rate = 10%")
names(otl.labs) <- c("0.05", "0.1")


ggplot()+ 
  facet_grid(outlier_rate~matrix_dimension,
             labeller = labeller(matrix_dimension = mtd.labs,
                                 outlier_rate = otl.labs))+
  geom_line(data = corr_sim_data, aes(x = sample_size,
                                      y = avg_time,
                                      colour = method,
                                      linetype = method),
            linewidth = 0.8)+
  scale_linetype_manual(values = c("dashed", "solid", "dotted", "dotdash", "dashed")) +
  scale_color_manual(values = c("blue", "green", "purple", "red", "black")) +
  scale_x_continuous(name="Sample size")+
  scale_y_log10(name = 'Running time')+
  theme_bw()+ 
  theme(plot.title = element_text(size = 12), 
        plot.subtitle = element_text(size = 9),
        legend.position="bottom",
        legend.title = element_blank(),
        legend.text=element_text(size=12),
        strip.text.x = element_text(size = 16, 
                                    colour = "black",
                                    angle = 90),
        strip.text.y = element_text(size = 16, 
                                    colour = "black",
                                    angle = 90),
        axis.title.x = element_text(size = 16),  # X-axis label size
        axis.title.y = element_text(size = 16))


dev.off()


#####

# plot3 = ggplot(corr_sim_data,aes(x = sample_size, y = avg_error, col = method,linetype = factor(outlier_rate)))+ 
#   facet_grid(matrix_dimension~.)+
#   geom_line(linewidth = 0.7)+
#   scale_x_continuous(name="sample size")+
#   theme_bw()+ 
#   labs(title = "Performance of each Metric Depth Function", 
#        subtitle = "when matrix dimnesion is 3 and 5% of Distribution is contaminated",
#        y = 'Bias in log scale')+ 
#   theme(plot.title = element_text(size = 12), 
#         plot.subtitle = element_text(size = 9))+
#   scale_y_log10()
